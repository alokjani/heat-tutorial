heat_template_version: 2015-10-15

description: >
  This template introduces the constraints attribute of the parameters section 
  and how they can be used to validate the template parameters pre-deployment. 
  It also aims to illustrate that a resource is not necessarily an Openstack 
  object (ie. Nova instance, Cinder volume) but it can also be an association 
  between two resources (ie. assigning a cinder volume to an instance). Lastly, 
  the template outputs section is also used here.

parameters:

  image:
    label: Server Image
    description: This parameter should be an image defined in glance.
    type: string
    default: Centos 7
    constraints:
      - custom_constraint: glance.image

  flavor:
    label: Instance Flavor
    description: Paramter that defines what type of flavor this instance will launch as
    type: string
    default: m1.small
    constraints:
      - custom_constraint: nova.flavor
      - allowed_values:
        - m1.small
        - m1.large

  ssh_key:
    label: SSH Key to be injected into instance
    description: Parameter that defines which keypair should be injected into the instance
    type: string
    default: heat_key
    constraints:
      - custom_constraint: nova.keypair

  network_name:
    label: Network name
    description: Which network should the instance be connected to
    type: string
    default: setup_net 
    constraints:
      - custom_constraint: neutron.network

  security_group:
    label: Security Group
    description: Security Group that will gouvern the ingress/egress rules for this instance
    type: string
    default: setup_sg 

  volume_size:
    label: Cinder Volume Size
    description: Volume size for the cinder volume that will be mounted to nova instance
    type: number
    default: 1
    constraints: 
      - range: { min: 1, max: 1024 }
        description: must be between 1 and 1024 Gb.

resources:

  instance:
    type: OS::Nova::Server
    properties:
      name: ex1.3
      key_name: { get_param: ssh_key }
      image: { get_param: image } 
      flavor: { get_param: flavor } 
      availability_zone: nova
      networks:
        - network: { get_param: network_name }
      security_groups:
        - { get_param: security_group }

  cinder_volume:
    type: OS::Cinder::Volume
    properties:
      size: { get_param: volume_size }
      availability_zone: nova

  volume_attachment:
    type: OS::Cinder::VolumeAttachment
    properties:
      volume_id: { get_resource: cinder_volume }
      instance_uuid: { get_resource: instance }

outputs:

  instance_ip:
    description: IP address of the deployed compute instance
    value: { get_attr: [instance, first_address] }

  instance_attachments:
    description: Attachements for the Nova instance
    value: { get_attr: [cinder_volume, attachments ] }
