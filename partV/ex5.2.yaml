heat_template_version: 2015-10-15

description: >
  This exercise showcases that SoftwareDeployment resources do not require manual
  signaling like when using cloud-init as a software orchestration engine

parameters:

  image:
    label: Server Image
    description: >
      This parameter should be an image defined in glance.
    type: string
    default: Centos 7
    constraints:
      - custom_constraint: glance.image

  flavor:
    label: Instance Flavor
    description: Paramter that defines what type of flavor this instance will launch as
    type: string
    default: m1.small
    constraints:
      - custom_constraint: nova.flavor

  ssh_key:
    label: SSH Key to be injected into instance
    description: Parameter that defines which keypair should be injected into the instance
    type: string
    default: heat_key
    constraints:
      - custom_constraint: nova.keypair

  security_group_icmp:
    label: Security Group Name (ICMP)
    type: string 
    default: setup_sg_icmp

  security_group_web:
    label: Security Group Name (WEB)
    type: string 
    default: setup_sg_web

  network_name:
    label: Network Name
    type: string
    default: setup_net
    constraints:
      - custom_constraint: neutron.network

  public_network_id:
    label: Public Network ID
    type: string

resources:

  boot_config:
    type: Heat::InstallConfigAgent

  instance:
    type: OS::Nova::Server
    properties:
      name: ex5.2_instance
      image: { get_param: image }
      security_groups: 
        - { get_param: security_group_icmp }
        - { get_param: security_group_web }
      key_name: { get_param: ssh_key }
      flavor: { get_param: flavor }
      networks: 
        - network: { get_param: network_name }
      user_data_format: SOFTWARE_CONFIG 
      software_config_transport: POLL_SERVER_HEAT
      user_data: { get_attr: [boot_config, config] } 

  http_config:
    type: OS::Heat::SoftwareConfig
    properties:
      group: script
      config: |
        #!/bin/bash
        yum -y install httpd
        echo "`date`" > /var/www/html/index.html
        service httpd start

  http_deployment:
    type: OS::Heat::SoftwareDeployment
    properties:
      config: { get_resource: http_config }
      server: { get_resource: instance }
      signal_transport: HEAT_SIGNAL
      actions:
        - CREATE  
        - UPDATE

  dependent_instance:
    type: OS::Nova::Server
    depends_on: http_deployment
    properties:
      name: ex5.2_dependent
      image: { get_param: image }
      security_groups: 
        - { get_param: security_group_icmp }
        - { get_param: security_group_web }
      key_name: { get_param: ssh_key }
      flavor: { get_param: flavor }
      networks: 
        - network: { get_param: network_name }
      user_data_format: RAW
      user_data: 
        str_replace: 
          params: 
            $floating_ip: { get_attr: [ instance, first_address ] } 
          template: | 
            #!/bin/bash
            curl $floating_ip > /tmp/hello

  floating_ip:
    type: Tutorial::FloatingIP
    properties:
      public_network_id: { get_param: public_network_id }
      port: { get_attr: [dependent_instance, addresses, { get_param: network_name} ,0 , port] }

outputs:
  ipaddr:
    value: { get_attr: [ floating_ip, floating_ip_address ] }
